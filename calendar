<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <!-- <link rel="stylesheet" href="styles.css"> -->

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <style>
        body {

            display: flex;
            justify-content: center;
            align-items: center;

            margin: 0;
            background-color: #f0f0f0;
        }

        #calendar-container {
            width: 800px;
            height: 400px;
            border: 1px solid #fff;
            border-radius: 5px;
            /* overflow: hidden; */
            background: #fff;

        }

        #calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background: #e4c47b;
            color: #fff;
        }

        #calendar-header h2 {
            margin: 0;
        }

        #calendar-body {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
        }

        .day-name {
            text-align: center;
            padding: 5px;
            background: #f0f0f0;
            border: 1px solid #ddd;
        }

        #days {
            width: 800px;
            height: 400px;
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            background: #fff;
        }

        .day {
            text-align: center;
            padding: 10px;
            border: 1px solid #ddd;
            background: #fff;
            cursor: pointer;
        }

        .day:hover {
            background-color: #f8d687;
        }

        .day:nth-child(7n) {
            background: #f9f9f9;
        }

        .day:nth-child(7n):hover {
            background: #f4d488;
        }

        .day:nth-child(7n+1) {
            background: #f9f9f9;
        }

        .day:nth-child(7n+1):hover {
            background: #f4d488;
        }
    </style>
</head>

<body>
    <div id="calendar-container">
        <div id="calendar-header">
            <button id="prev-month">◄</button>
            <h2 id="month-year"></h2>
            <button id="next-month">►</button>
        </div>

        <div id="calendar-body">
            <div class="day-name">Sun</div>
            <div class="day-name">Mon</div>
            <div class="day-name">Tue</div>
            <div class="day-name">Wed</div>
            <div class="day-name">Thu</div>
            <div class="day-name">Fri</div>
            <div class="day-name">Sat</div>

        </div>

        <!-- 動態生成日期 -->
        <div id="days">
            <!-- <div class="day">東西勒</div> -->
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="add-event fs-5" id="exampleModalLabel">Add Event</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">

                    <div class="input-to-do">
                        <p>to-do</p>
                        <input type="text" aria-label="to-do" class="form-control" id="todo_input">

                    </div>
                    <div class="input-location">
                        <p>location</p>
                        <input type="text" aria-label="location" class="form-control">

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="add_btn">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- <template> -->
    <div class="container mt-5">
        <div class="input-group mb-3">
            <input id="todo_input" type="text" class="form-control" placeholder="請輸入待辦事項..." />
            <button class="btn btn-primary" type="button" id="add_btn">新增</button>
        </div>
        <ul id="todo_list_group" class="list-group">

        </ul>

    </div>






    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const calendarHeader = document.getElementById('month-year');

            const daysContainer = document.getElementById('days');

            const prevMonthBtn = document.getElementById('prev-month');
            const nextMonthBtn = document.getElementById('next-month');

            let currentDate = new Date();

            function renderCalendar() {
                const year = currentDate.getFullYear();
                const month = currentDate.getMonth();

                calendarHeader.textContent = `${currentDate.toLocaleString('default', { month: 'long' })} ${year}`;

                daysContainer.innerHTML = '';

                const firstDayOfMonth = new Date(year, month, 1).getDay();
                const daysInMonth = new Date(year, month + 1, 0).getDate();



                for (let i = 0; i < firstDayOfMonth; i++) {
                    const emptyDay = document.createElement("div");
                    daysContainer.appendChild(emptyDay);

                }

                for (let day = 1; day <= daysInMonth; day++) {
                    // daysContainer.innerHTML += `<div class="day">${day}</div>`;
                    const dayDiv = document.createElement('div');
                    Div.className = "day";
                    Div.textContent = day;

                    const todoInfoDiv = document.createElement('div');
                    dayDiv.appendChild(todoInfoDiv);
                    daysContainer.appendChild();

                    div.addEventListener('click', () => {
                        const modal = new bootstrap.Modal(document.getElementById('exampleModal'));
                        modal.show();
                    });
                }
            }

            prevMonthBtn.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() - 1);
                renderCalendar();
            });

            nextMonthBtn.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() + 1);
                renderCalendar();
            });

            renderCalendar();
        });

    </script>

    <script>
        const todoInput = document.querySelector("#todo_input");
        const addButton = document.querySelector("#add_btn");
        const key = "todoList";
        const todoListGroup = document.querySelector("#todo_list_group");

        addButton.addEventListener("click", function (event) {
            const todoContent = todoInput.value.trim();
            if (!todoContent) return;
            // 儲存待辦事項
            const todoItem = {
                id: new Date().valueOf(),
                content: todoContent,
                isDone: false,
            };
            saveTodoItem(todoItem);
            // 生成TODO 的 HTML
            renderingTodoList();
        });
        window.addEventListener("load", function (event) {
            renderingTodoList();
        });

        function renderingTodoList() {
            const todoList = getTodoListFromStorage();
            if (!todoList) return;
            todoListGroup.innerHTML = "";
            todoList.forEach((item) => {
                todoListGroup.innerHTML += createTodoItemHTML(item);
            });
        }
        function getTodoListFromStorage() {
            //取得現在所有的todoItem,再加上去
            const localStorageItem = localStorage.getItem(key);
            return localStorageItem ? JSON.parse(localStorageItem) : [];
        }
        function createTodoItemHTML(todoItem) {
            return `<li class="list-group-item">
                  <div class="input-group" data-id="${todoItem.id}">
                    <div class="input-group-text">
                      <input
                        class="form-check-input mt-0"
                        type="checkbox"
                        oninput="isDoneCheck(${todoItem.id})"
                        ${todoItem.isDone ? "checked" : ""}
                      />
                    </div>
                    <input
                      type="text"
                      class="form-control todo-content"
                      aria-label="Text input with checkbox"
                      value="${todoItem.content}"
                      disabled
                    />
                    <button class="btn btn-success save-btn d-none" type="button" onclick="save(${todoItem.id
                }, this)">儲存</button>
                    <button class="btn btn-warning" type="button" onclick="edit(${todoItem.id
                }, this)">編輯</button>
                    <button class="btn btn-danger" type="button" onclick="remove(${todoItem.id
                }, this)">刪除</button>
                  </div>
                </li>`;
        }
        function isDoneCheck(id) {
            const todoList = getTodoListFromStorage();
            const todoItem = todoList.find((item) => item.id === id);
            todoItem.isDone = !todoItem.isDone;
            saveTodoListToStorage(todoList);
        }
        function save(id, el) {
            const todoContent = el.parentElement.querySelector(".todo-content");
            const val = todoContent.value.trim();
            if (!val) return;

            const todoList = getTodoListFromStorage();

            const todoItem = todoList.find((item) => item.id === id);
            todoItem.content = val;
            saveTodoListToStorage(todoList);
            renderingTodoList();
        }
        function saveTodoListToStorage(todoList) {
            const json = JSON.stringify(todoList);
            localStorage.setItem(key, json);
        }
        function edit(id, el) {
            const todoContent = el.parentElement.querySelector(".todo-content");
            todoContent.disabled = false;
            const saveBtn = el.parentElement.querySelector(".save-btn");
            saveBtn.classList.remove("d-none");
            el.classList.add("d-none");
        }
        function remove(id, el) {
            const todoList = getTodoListFromStorage();
            const todoItemIdx = todoList.findIndex((item) => item.id === id);
            todoList.splice(todoItemIdx, 1);
            saveTodoListToStorage(todoList);
            renderingTodoList();
        }
        function saveTodoItem(todoItem) {
            //取得現在所有的todoItem,再加上去
            const todoList = getTodoListFromStorage();
            todoList.push(todoItem);
            saveTodoListToStorage(todoList);
        }
    </script>




    

</body>

</html>
